-module(marvin_pdu2_dispatch_message_create).
-compile({parse_transform, cloak_transform}).

-export([export/1]).
% id  snowflake   id of the message
% channel_id  snowflake   id of the channel the message was sent in
% author* user object the author of this message (not guaranteed to be a valid user, see below)
% content string  contents of the message
% timestamp   ISO8601 timestamp   when this message was sent
% edited_timestamp    ?ISO8601 timestamp  when this message was edited (or null if never)
% tts bool    whether this was a TTS message
% mention_everyone    bool    whether this message mentions everyone
% mentions    array of user objects   users specifically mentioned in the message
% mention_roles   array of role object ids    roles specifically mentioned in this message
% attachments array of attachment objects any attached files
% embeds  array of embed objects  any embedded content
% reactions?  array of reaction objects   reactions to the message
% nonce?  ?snowflake  used for validating a message was sent
% pinned  bool    whether this message is pinned
% webhook_id? snowflake   if the message is generated by a webhook, this is the webhook's id
% type    int type of message
% activity?   message activity object sent with Rich Presence-related chat embeds
% application?    message application object  sent with Rich Presence-related chat embeds
-record(?MODULE, {
    id = undefined :: id(),
    channel_id = undefined :: channel_id(),
    author = undefined :: author(),
    content = undefined :: content(),
    timestamp = undefined :: timestamp(),
    edited_timestamp = undefined :: edited_timestamp(),
    tts = undefined :: tts(),
    mention_everyone = undefined :: mention_everyone(),
    mentions = undefined :: mentions(),
    mention_roles = undefined :: mention_roles(),
    attachments = undefined :: attachments(),
    embeds = undefined :: embeds(),
    reactions = [] :: reactions(),
    nonce = undefined :: nonce(),
    pinned = undefined :: pinned(),
    webhook_id = undefined :: webhook_id(),
    type = undefined :: type()
    % activity = undefined :: activity(),
    % application = undefined :: application()
}).

-define(type_default, 0).
-define(type_recipient_add, 1).
-define(type_recipient_remove, 2).
-define(type_call, 3).
-define(type_channel_name_change, 4).
-define(type_channel_icon_change, 5).
-define(type_channel_pinned_message, 6).
-define(type_guild_member_join, 7).

-type id() :: marvin_pdu2:showflake().
-type channel_id() :: marvin_pdu2:showflake().
-type author() :: marvin_pdu2_object_user:t().
-type content() :: unicode:unicode_binary().
-type timestamp() :: unicode:unicode_binary().
-type edited_timestamp() :: unicode:unicode_binary().
-type tts() :: boolean().
-type mention_everyone() :: boolean().
-type mentions() :: [marvin_pdu2_object_user:t()].
-type mention_roles() :: [marvin_pdu2_object_role:id()].
-type attachments() :: [marvin_pdu2_object_attachment:t()].
-type embeds() :: [marvin_pdu2_object_embed:t()].
-type reactions() :: [marvin_pdu2_object_reaction:t()].
-type nonce() :: marvin_pdu2:showflake().
-type pinned() :: boolean().
-type webhook_id() :: marvin_pdu2:showflake().
-type type() :: ?type_default..?type_guild_member_join.
% -type activity() :: marvin_pdu2_object_message_activity:t().
% -type application() :: marvin_pdu2_object_message_application:t().
-type t() :: #?MODULE{}.

-export_type([
    id/0, channel_id/0, author/0, content/0, timestamp/0, edited_timestamp/0,
    tts/0, mention_everyone/0, mentions/0, mention_roles/0, attachments/0,
    embeds/0, reactions/0, nonce/0, pinned/0, webhook_id/0, type/0,
    % activity/0, application/0,
    t/0
]).

cloak_validate(author, Value) ->
    {ok, marvin_pdu2_object_user:new(Value)};

cloak_validate(_, null) ->
    {ok, undefined};

cloak_validate(mentions, Value) when is_list(Value) ->
    {ok, [marvin_pdu2_object_user:new(Item) || Item <- Value]};

cloak_validate(attachments, Value) when is_list(Value) ->
    {ok, [marvin_pdu2_object_attachment:new(Item) || Item <- Value]};

cloak_validate(embeds, Value) when is_list(Value) ->
    {ok, [marvin_pdu2_object_embed:new(Item) || Item <- Value]};

cloak_validate(reactions, Value) when is_list(Value) ->
    {ok, [marvin_pdu2_object_reaction:new(Item) || Item <- Value]};

cloak_validate(_, Value) ->
    {ok, Value}.


export(#?MODULE{
    id = Id,
    channel_id = ChannelId,
    author = Author,
    content = Content,
    timestamp = Timestamp,
    edited_timestamp = EditedTimestamp,
    tts = Tts,
    mention_everyone = MentionEveryone,
    mentions = Mentions,
    mention_roles = MentionRoles,
    attachments = Attachments,
    embeds = Embeds,
    reactions = Reactions,
    nonce = Nonce,
    pinned = Pinned,
    webhook_id = WebhookId,
    type = Type
    % activity = Activity,
    % application = Application
}) ->
    #{
        <<"id">> => marvin_pdu2:nullify(Id),
        <<"channel_id">> => marvin_pdu2:nullify(ChannelId),
        <<"author">> => marvin_pdu2_object_user:export(Author),
        <<"content">> => marvin_pdu2:nullify(Content),
        <<"timestamp">> => marvin_pdu2:nullify(Timestamp),
        <<"edited_timestamp">> => marvin_pdu2:nullify(EditedTimestamp),
        <<"tts">> => marvin_pdu2:nullify(Tts),
        <<"mention_everyone">> => marvin_pdu2:nullify(MentionEveryone),
        <<"mentions">> => [marvin_pdu2_object_user:export(Item) || Item <- Mentions],
        <<"mention_roles">> => marvin_pdu2:nullify(MentionRoles),
        <<"attachments">> => [marvin_pdu2_object_attachment:export(Item) || Item <- Attachments],
        <<"embeds">> => [marvin_pdu2_object_embed:export(Item) || Item <- Embeds],
        <<"reactions">> => [marvin_pdu2_object_reaction:export(Item) || Item <- Reactions],
        <<"nonce">> => marvin_pdu2:nullify(Nonce),
        <<"pinned">> => marvin_pdu2:nullify(Pinned),
        <<"webhook_id">> => marvin_pdu2:nullify(WebhookId),
        <<"type">> => marvin_pdu2:nullify(Type)
        % <<"activity">> => case Activity of
        %     undefined -> null;
        %     _ -> marvin_pdu2_object_activity:export(Activity)
        % end,
        % <<"application">> => case Application of
        %     undefined -> null;
        %     _ -> marvin_pdu2_object_application:export(Application)
        % end
    }.
